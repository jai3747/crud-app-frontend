name: Security Scanning Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FRONTEND_REPO: crud-app-frontend
  BACKEND_REPO: crud-app-backend
  SEMGREP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  # Secret Scans (TruffleHog) - Run in parallel for frontend and backend
  frontend-secret-scan:
    name: üîí Frontend Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.FRONTEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          clean: true
          force: true
      - name: TruffleHog Scan
        uses: trufflesecurity/trufflehog@v3.63.3
        continue-on-error: true
        with:
          path: .
          base: ${{ github.event.before }}
          head: ${{ github.sha }}
          extra_args: --json --output trufflehog-frontend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-secret-scan-report
          path: trufflehog-frontend-report.json
          retention-days: 30

  backend-secret-scan:
    name: üîí Backend Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.BACKEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
          clean: true
          force: true
      - name: TruffleHog Scan
        uses: trufflesecurity/trufflehog@v3.63.3
        continue-on-error: true
        with:
          path: .
          base: ${{ github.event.before }}
          head: ${{ github.sha }}
          extra_args: --json --output trufflehog-backend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-secret-scan-report
          path: trufflehog-backend-report.json
          retention-days: 30

  # SCA Scans (Snyk) - Run after Secret Scans
  frontend-sca:
    name: üì¶ Frontend SCA
    needs: [ frontend-secret-scan, backend-secret-scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.FRONTEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Snyk Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test --json > snyk-frontend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-sca-report
          path: snyk-frontend-report.json
          retention-days: 30

  backend-sca:
    name: üì¶ Backend SCA
    needs: [ frontend-secret-scan, backend-secret-scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.BACKEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Snyk Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test --json > snyk-backend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-sca-report
          path: snyk-backend-report.json
          retention-days: 30

  # SAST Scans (Semgrep) - Run after SCA Scans
  frontend-sast:
    name: üîç Frontend SAST
    needs: [ frontend-sca, backend-sca ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.FRONTEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Semgrep Scan
        uses: semgrep/semgrep-action@v1
        continue-on-error: true
        with:
          config: p/react
          output: semgrep-frontend-results.json
          json: true
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-sast-report
          path: semgrep-frontend-results.json
          retention-days: 30

  backend-sast:
    name: üîç Backend SAST
    needs: [ frontend-sca, backend-sca ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.BACKEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Semgrep Scan
        uses: semgrep/semgrep-action@v1
        continue-on-error: true
        with:
          config: p/nodejs
          output: semgrep-backend-results.json
          json: true
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-sast-report
          path: semgrep-backend-results.json
          retention-days: 30

  # IaC Scans (Checkov) - Run after SAST Scans
  frontend-iac:
    name: üèóÔ∏è Frontend IaC Scan
    needs: [ frontend-sast, backend-sast ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.FRONTEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@v12
        continue-on-error: true
        with:
          directory: .
          framework: dockerfile,kubernetes,secrets
          output: json
          output-file-path: checkov-frontend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: frontend-iac-report
          path: checkov-frontend-report.json
          retention-days: 30

  backend-iac:
    name: üèóÔ∏è Backend IaC Scan
    needs: [ frontend-sast, backend-sast ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.BACKEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@v12
        continue-on-error: true
        with:
          directory: .
          framework: dockerfile,kubernetes,secrets
          output: json
          output-file-path: checkov-backend-report.json
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: backend-iac-report
          path: checkov-backend-report.json
          retention-days: 30

  # Linting and Testing - Run after IaC Scans
  frontend-lint:
    name: üßπ Frontend Lint
    needs: [ frontend-iac, backend-iac ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Frontend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.FRONTEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Upload Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-lint-report
          path: lint-report.json
          retention-days: 7

  backend-lint:
    name: üßπ Backend Lint
    needs: [ frontend-iac, backend-iac ]
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf *
          rm -rf .git
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ env.BACKEND_REPO }}
          token: ${{ secrets.GH_PAT }}
          clean: true
          force: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint (if available)
        run: npm run lint || echo "No lint script found, skipping"

  # Security Report Aggregation
  security-report:
    name: üìä Security Report Generation
    needs: [frontend-lint, backend-lint]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Reports
        uses: actions/download-artifact@v4
        with:
          path: reports
          
      - name: Generate Combined Security Report
        run: |
          echo "# Combined Security Report for CI/CD Pipeline" > combined-security-report.md
          echo "## Generated on: $(date)" >> combined-security-report.md
          
          echo "## Frontend Security Summary" >> combined-security-report.md
          echo "- Secret Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- SCA Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- SAST Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- IaC Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- Linting: ‚úÖ Completed" >> combined-security-report.md
          
          echo "## Backend Security Summary" >> combined-security-report.md
          echo "- Secret Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- SCA Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- SAST Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- IaC Scan: ‚úÖ Completed" >> combined-security-report.md
          echo "- Linting: ‚úÖ Completed" >> combined-security-report.md
          
          # Add summary of findings
          if [ -f reports/frontend-sast-report/semgrep-frontend-results.json ]; then
            ISSUE_COUNT=$(grep -o '"results":' reports/frontend-sast-report/semgrep-frontend-results.json | wc -l)
            echo "### Frontend SAST Issues: $ISSUE_COUNT" >> combined-security-report.md
          fi
          
          if [ -f reports/backend-sast-report/semgrep-backend-results.json ]; then
            ISSUE_COUNT=$(grep -o '"results":' reports/backend-sast-report/semgrep-backend-results.json | wc -l)
            echo "### Backend SAST Issues: $ISSUE_COUNT" >> combined-security-report.md
          fi
          
          echo "## DISCLAIMER" >> combined-security-report.md
          echo "This report is generated automatically and should be reviewed by security professionals." >> combined-security-report.md
      
      - name: Upload Combined Report
        uses: actions/upload-artifact@v4
        with:
          name: combined-security-report
          path: combined-security-report.md
          retention-days: 90
