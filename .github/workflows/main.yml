# # # name: Snyk Security Scan

# # # on:
# # #   push:
# # #     branches: [ "main" ]
# # #   pull_request:
# # #     branches: [ "main" ]
# # #   schedule:
# # #     - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
# # #   workflow_dispatch:  # Allow manual triggering

# # # jobs:
# # #   security_scan:
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout code
# # #         uses: actions/checkout@v3

# # #       - name: Set up Node.js
# # #         uses: actions/setup-node@v3
# # #         with:
# # #           node-version: '16'
          
# # #       - name: Install dependencies
# # #         run: |
# # #           if [ -f package.json ]; then
# # #             npm install
# # #           fi
          
# # #       # Run Snyk scan
# # #       - name: Run Snyk to check for vulnerabilities
# # #         continue-on-error: true  # Continue even if vulnerabilities found
# # #         uses: snyk/actions/node@master
# # #         env:
# # #           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
# # #         with:
# # #           args: --all-projects --detection-depth=999 --json-file-output=snyk-results.json
          
# # #       # Just count and display vulnerabilities in pipeline output
# # #       - name: Count vulnerabilities
# # #         if: always()
# # #         run: |
# # #           if [ -f snyk-results.json ]; then
# # #             echo "FOUND VULNERABILITIES:"
# # #             echo "======================="
            
# # #             high_count=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
# # #             medium_count=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
# # #             low_count=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
# # #             total=$((high_count + medium_count + low_count))
            
# # #             echo "HIGH: $high_count"
# # #             echo "MEDIUM: $medium_count"
# # #             echo "LOW: $low_count"
# # #             echo "TOTAL: $total"
# # #           else
# # #             echo "NO VULNERABILITIES FOUND OR SCAN FAILED"
# # #           fi
          
# # #       # Save raw results file
# # #       - name: Upload results
# # #         if: always()
# # #         uses: actions/upload-artifact@v4
# # #         with:
# # #           name: snyk-results
# # #           path: snyk-results.json
# # name: Enhanced Security Scan
# # on:
# #   push:
# #     branches: [ "main" ]
# #   pull_request:
# #     branches: [ "main" ]
# #   schedule:
# #     - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
# #   workflow_dispatch:  # Allow manual triggering

# # jobs:
# #   security_scan:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3
        
# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: '18'  # Upgraded from 16 to meet package requirements
# #           cache: 'npm'
          
# #       - name: Install dependencies
# #         run: |
# #           if [ -f package.json ]; then
# #             npm ci  # More reliable than npm install for CI environments
# #           fi
          
# #       # Run npm audit in addition to Snyk
# #       - name: Run npm audit
# #         continue-on-error: true
# #         run: |
# #           npm audit --json > npm-audit-results.json || true
# #           echo "NPM AUDIT RESULTS:"
# #           echo "=================="
# #           npm audit
          
# #       # Run Snyk scan
# #       - name: Run Snyk to check for vulnerabilities
# #         continue-on-error: true
# #         uses: snyk/actions/node@master
# #         env:
# #           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
# #         with:
# #           args: --all-projects --detection-depth=999 --json-file-output=snyk-results.json
          
# #       # Process and display vulnerabilities in pipeline output
# #       - name: Process vulnerability results
# #         if: always()
# #         run: |
# #           echo "VULNERABILITY SUMMARY:"
# #           echo "======================"
          
# #           if [ -f snyk-results.json ]; then
# #             high_count=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
# #             medium_count=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
# #             low_count=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
# #             total=$((high_count + medium_count + low_count))
            
# #             echo "SNYK FINDINGS:"
# #             echo "  HIGH: $high_count"
# #             echo "  MEDIUM: $medium_count"
# #             echo "  LOW: $low_count"
# #             echo "  TOTAL: $total"
# #           else
# #             echo "  NO SNYK RESULTS FOUND OR SCAN FAILED"
# #           fi
          
# #           # Exit with error if high severity vulnerabilities are found
# #           if [ "$high_count" -gt 0 ]; then
# #             echo "⚠️ High severity vulnerabilities detected!"
# #             exit_code=1
# #           else
# #             exit_code=0
# #           fi
          
# #           exit $exit_code
          
# #       # Save results files
# #       - name: Upload results
# #         if: always()
# #         uses: actions/upload-artifact@v4
# #         with:
# #           name: security-scan-results
# #           path: |
# #             snyk-results.json
# #             npm-audit-results.json
# name: Enhanced Security Scan
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#   schedule:
#     - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
#   workflow_dispatch:  # Allow manual triggering

# jobs:
#   security_scan:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'  # Upgraded from 16 to meet package requirements
#           cache: 'npm'
          
#       - name: Install dependencies
#         run: |
#           if [ -f package.json ]; then
#             npm ci || npm install  # Try npm ci first, fall back to npm install
#           fi

#       # ===== NPM AUDIT SECTION =====
#       - name: Run npm audit
#         id: npm-audit
#         continue-on-error: true
#         run: |
#           echo "::group::NPM AUDIT DETAILED RESULTS"
#           npm audit || true
#           echo "::endgroup::"
          
#           # Create JSON output and count vulnerabilities
#           npm audit --json > npm-audit-results.json || true
          
#           # Count vulnerabilities by severity
#           high_count=$(grep -o '"severity":"high"' npm-audit-results.json | wc -l)
#           medium_count=$(grep -o '"severity":"moderate"' npm-audit-results.json | wc -l)
#           low_count=$(grep -o '"severity":"low"' npm-audit-results.json | wc -l)
#           total=$((high_count + medium_count + low_count))
          
#           # Store counts as outputs
#           echo "npm_high=$high_count" >> $GITHUB_OUTPUT
#           echo "npm_medium=$medium_count" >> $GITHUB_OUTPUT
#           echo "npm_low=$low_count" >> $GITHUB_OUTPUT
#           echo "npm_total=$total" >> $GITHUB_OUTPUT
          
#           echo "==== NPM AUDIT SUMMARY ===="
#           echo "HIGH: $high_count"
#           echo "MEDIUM: $medium_count"
#           echo "LOW: $low_count"
#           echo "TOTAL: $total"

#       # ===== SNYK SCAN SECTION =====
#       - name: Run Snyk to check for vulnerabilities
#         id: snyk-scan
#         continue-on-error: true
#         uses: snyk/actions/node@master
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           args: --all-projects --detection-depth=999 --json-file-output=snyk-results.json
          
#       - name: Process Snyk results
#         id: process-snyk
#         if: always()
#         run: |
#           if [ -f snyk-results.json ]; then
#             # Count vulnerabilities by severity
#             high_count=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
#             medium_count=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
#             low_count=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
#             total=$((high_count + medium_count + low_count))
            
#             # Store counts as outputs
#             echo "snyk_high=$high_count" >> $GITHUB_OUTPUT
#             echo "snyk_medium=$medium_count" >> $GITHUB_OUTPUT
#             echo "snyk_low=$low_count" >> $GITHUB_OUTPUT
#             echo "snyk_total=$total" >> $GITHUB_OUTPUT
            
#             echo "==== SNYK SCAN SUMMARY ===="
#             echo "HIGH: $high_count"
#             echo "MEDIUM: $medium_count"
#             echo "LOW: $low_count"
#             echo "TOTAL: $total"
#           else
#             echo "NO SNYK RESULTS FOUND OR SCAN FAILED"
#             echo "snyk_high=0" >> $GITHUB_OUTPUT
#             echo "snyk_medium=0" >> $GITHUB_OUTPUT
#             echo "snyk_low=0" >> $GITHUB_OUTPUT
#             echo "snyk_total=0" >> $GITHUB_OUTPUT
#           fi

#       # ===== COMBINED RESULTS SECTION =====
#       - name: Combine vulnerability results
#         if: always()
#         run: |
#           # Create a summary in markdown format for the job summary
#           echo "# Security Scan Results" > $GITHUB_STEP_SUMMARY
          
#           echo "## NPM Audit Results" >> $GITHUB_STEP_SUMMARY
#           echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
#           echo "| -------- | ----- |" >> $GITHUB_STEP_SUMMARY
#           echo "| HIGH | ${{ steps.npm-audit.outputs.npm_high }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| MEDIUM | ${{ steps.npm-audit.outputs.npm_medium }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| LOW | ${{ steps.npm-audit.outputs.npm_low }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| **TOTAL** | **${{ steps.npm-audit.outputs.npm_total }}** |" >> $GITHUB_STEP_SUMMARY
          
#           echo "## Snyk Scan Results" >> $GITHUB_STEP_SUMMARY
#           echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
#           echo "| -------- | ----- |" >> $GITHUB_STEP_SUMMARY
#           echo "| HIGH | ${{ steps.process-snyk.outputs.snyk_high }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| MEDIUM | ${{ steps.process-snyk.outputs.snyk_medium }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| LOW | ${{ steps.process-snyk.outputs.snyk_low }} |" >> $GITHUB_STEP_SUMMARY
#           echo "| **TOTAL** | **${{ steps.process-snyk.outputs.snyk_total }}** |" >> $GITHUB_STEP_SUMMARY
          
#           # Print clear separation between the two tools
#           echo "================================================"
#           echo "           SECURITY SCAN COMPARISON              "
#           echo "================================================"
#           echo "NPM AUDIT: ${{ steps.npm-audit.outputs.npm_total }} vulnerabilities"
#           echo "  HIGH: ${{ steps.npm-audit.outputs.npm_high }}"
#           echo "  MEDIUM: ${{ steps.npm-audit.outputs.npm_medium }}"
#           echo "  LOW: ${{ steps.npm-audit.outputs.npm_low }}"
#           echo ""
#           echo "SNYK SCAN: ${{ steps.process-snyk.outputs.snyk_total }} vulnerabilities"
#           echo "  HIGH: ${{ steps.process-snyk.outputs.snyk_high }}"
#           echo "  MEDIUM: ${{ steps.process-snyk.outputs.snyk_medium }}"
#           echo "  LOW: ${{ steps.process-snyk.outputs.snyk_low }}"
#           echo "================================================"
          
#           # Create an action annotation to highlight the potential problems
#           npm_high=${{ steps.npm-audit.outputs.npm_high }}
#           snyk_high=${{ steps.process-snyk.outputs.snyk_high }}
          
#           if [ "$npm_high" -gt 0 ] || [ "$snyk_high" -gt 0 ]; then
#             echo "⚠️ High severity vulnerabilities detected!"
#             exit_code=1
#           else
#             echo "✅ No high severity vulnerabilities detected."
#             exit_code=0
#           fi
          
#           exit $exit_code
          
#       # Save results files
#       - name: Upload results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: security-scan-results
#           path: |
#             snyk-results.json
#             npm-audit-results.json
name: Enhanced Security Scan
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        id: install
        run: |
          if [ -f package.json ]; then
            # Capture npm install output
            npm_output=$(npm ci 2>&1 || npm install 2>&1)
            echo "$npm_output"
            
            # Extract vulnerability counts from npm install output
            if echo "$npm_output" | grep -q "vulnerabilities"; then
              vuln_line=$(echo "$npm_output" | grep "vulnerabilities")
              echo "INSTALL VULNERABILITIES: $vuln_line"
              
              # Extract the vulnerability counts using regex
              high_count=$(echo "$vuln_line" | grep -o '[0-9]\+ high' | grep -o '[0-9]\+' || echo "0")
              medium_count=$(echo "$vuln_line" | grep -o '[0-9]\+ moderate' | grep -o '[0-9]\+' || echo "0")
              low_count=$(echo "$vuln_line" | grep -o '[0-9]\+ low' | grep -o '[0-9]\+' || echo "0")
              
              # Set outputs for later use
              echo "npm_high=$high_count" >> $GITHUB_OUTPUT
              echo "npm_medium=$medium_count" >> $GITHUB_OUTPUT
              echo "npm_low=$low_count" >> $GITHUB_OUTPUT
              total=$((high_count + medium_count + low_count))
              echo "npm_total=$total" >> $GITHUB_OUTPUT
            else
              echo "npm_high=0" >> $GITHUB_OUTPUT
              echo "npm_medium=0" >> $GITHUB_OUTPUT
              echo "npm_low=0" >> $GITHUB_OUTPUT
              echo "npm_total=0" >> $GITHUB_OUTPUT
            fi
          fi

      # Run detailed npm audit for more information
      - name: Run npm audit
        id: npm-audit
        continue-on-error: true
        run: |
          echo "::group::NPM AUDIT DETAILED RESULTS"
          npm audit || true
          echo "::endgroup::"
          
          # Generate JSON results
          npm audit --json > npm-audit-results.json || true
          
          # Use the values from the install step
          echo "==== NPM VULNERABILITIES SUMMARY ===="
          echo "HIGH: ${{ steps.install.outputs.npm_high }}"
          echo "MEDIUM: ${{ steps.install.outputs.npm_medium }}"
          echo "LOW: ${{ steps.install.outputs.npm_low }}"
          echo "TOTAL: ${{ steps.install.outputs.npm_total }}"

      # Run Snyk scan
      - name: Run Snyk to check for vulnerabilities
        id: snyk-scan
        continue-on-error: true
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --detection-depth=999 --json-file-output=snyk-results.json
          
      # Process Snyk results
      - name: Process Snyk results
        id: process-snyk
        if: always()
        run: |
          if [ -f snyk-results.json ]; then
            # Count vulnerabilities by severity
            high_count=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
            medium_count=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
            low_count=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
            total=$((high_count + medium_count + low_count))
            
            # Store counts as outputs
            echo "snyk_high=$high_count" >> $GITHUB_OUTPUT
            echo "snyk_medium=$medium_count" >> $GITHUB_OUTPUT
            echo "snyk_low=$low_count" >> $GITHUB_OUTPUT
            echo "snyk_total=$total" >> $GITHUB_OUTPUT
            
            echo "==== SNYK SCAN SUMMARY ===="
            echo "HIGH: $high_count"
            echo "MEDIUM: $medium_count"
            echo "LOW: $low_count"
            echo "TOTAL: $total"
          else
            echo "NO SNYK RESULTS FOUND OR SCAN FAILED"
            echo "snyk_high=0" >> $GITHUB_OUTPUT
            echo "snyk_medium=0" >> $GITHUB_OUTPUT
            echo "snyk_low=0" >> $GITHUB_OUTPUT
            echo "snyk_total=0" >> $GITHUB_OUTPUT
          fi

      # Create a combined summary
      - name: Combine vulnerability results
        if: always()
        run: |
          # Create a summary in markdown format for the job summary
          echo "# Security Scan Results" > $GITHUB_STEP_SUMMARY
          
          echo "## NPM Install Detected Vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
          echo "| -------- | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| HIGH | ${{ steps.install.outputs.npm_high }} |" >> $GITHUB_STEP_SUMMARY
          echo "| MEDIUM | ${{ steps.install.outputs.npm_medium }} |" >> $GITHUB_STEP_SUMMARY
          echo "| LOW | ${{ steps.install.outputs.npm_low }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **TOTAL** | **${{ steps.install.outputs.npm_total }}** |" >> $GITHUB_STEP_SUMMARY
          
          echo "## Snyk Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
          echo "| -------- | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| HIGH | ${{ steps.process-snyk.outputs.snyk_high }} |" >> $GITHUB_STEP_SUMMARY
          echo "| MEDIUM | ${{ steps.process-snyk.outputs.snyk_medium }} |" >> $GITHUB_STEP_SUMMARY
          echo "| LOW | ${{ steps.process-snyk.outputs.snyk_low }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **TOTAL** | **${{ steps.process-snyk.outputs.snyk_total }}** |" >> $GITHUB_STEP_SUMMARY
          
          # Print clear separation between the two tools
          echo "================================================"
          echo "           SECURITY SCAN COMPARISON              "
          echo "================================================"
          echo "NPM INSTALL: ${{ steps.install.outputs.npm_total }} vulnerabilities"
          echo "  HIGH: ${{ steps.install.outputs.npm_high }}"
          echo "  MEDIUM: ${{ steps.install.outputs.npm_medium }}"
          echo "  LOW: ${{ steps.install.outputs.npm_low }}"
          echo ""
          echo "SNYK SCAN: ${{ steps.process-snyk.outputs.snyk_total }} vulnerabilities"
          echo "  HIGH: ${{ steps.process-snyk.outputs.snyk_high }}"
          echo "  MEDIUM: ${{ steps.process-snyk.outputs.snyk_medium }}"
          echo "  LOW: ${{ steps.process-snyk.outputs.snyk_low }}"
          echo "================================================"
          
          # Create a failure if high vulnerabilities are found
          npm_high=${{ steps.install.outputs.npm_high }}
          snyk_high=${{ steps.process-snyk.outputs.snyk_high }}
          
          if [ "$npm_high" -gt 0 ] || [ "$snyk_high" -gt 0 ]; then
            echo "⚠️ High severity vulnerabilities detected!"
            exit_code=1
          else
            echo "✅ No high severity vulnerabilities detected."
            exit_code=0
          fi
          
          exit $exit_code
          
      # Add a step to run npm audit fix if requested
      - name: Fix vulnerabilities (optional)
        if: ${{ github.event_name == 'workflow_dispatch' && steps.install.outputs.npm_total > 0 }}
        run: |
          echo "Attempting to fix vulnerabilities automatically..."
          npm audit fix || true
          echo "After npm audit fix:"
          npm audit || true
          
      # Save results files
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            snyk-results.json
            npm-audit-results.json
