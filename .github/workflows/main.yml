name: Snyk Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi
          
      # Run Snyk scan
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true  # Continue even if vulnerabilities found
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --detection-depth=999 --json-file-output=snyk-results.json
          
      # Generate HTML report
      - name: Generate HTML report
        if: always()
        continue-on-error: true
        run: |
          npm install -g snyk-to-html
          if [ -f snyk-results.json ]; then
            snyk-to-html -i snyk-results.json -o snyk-report.html
          fi
          
      # Create simple vulnerability count and summary
      - name: Count vulnerabilities
        if: always()
        run: |
          echo "## Snyk Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f snyk-results.json ]; then
            # Install jq for JSON processing
            sudo apt-get update -qq && sudo apt-get install -y jq
            
            # Count vulnerabilities by severity
            high_count=$(grep -o '"severity":"high"' snyk-results.json | wc -l)
            medium_count=$(grep -o '"severity":"medium"' snyk-results.json | wc -l)
            low_count=$(grep -o '"severity":"low"' snyk-results.json | wc -l)
            total=$((high_count + medium_count + low_count))
            
            # Write summary table
            echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
            echo "| -------- | ----- |" >> $GITHUB_STEP_SUMMARY
            echo "| ðŸ”´ High     | $high_count |" >> $GITHUB_STEP_SUMMARY
            echo "| ðŸŸ  Medium   | $medium_count |" >> $GITHUB_STEP_SUMMARY
            echo "| ðŸŸ¡ Low      | $low_count |" >> $GITHUB_STEP_SUMMARY
            echo "| **TOTAL**   | **$total** |" >> $GITHUB_STEP_SUMMARY
            
            # Save counts to a simple text file
            echo "# VULNERABILITY SUMMARY" > vulnerability-count.txt
            echo "High: $high_count" >> vulnerability-count.txt
            echo "Medium: $medium_count" >> vulnerability-count.txt
            echo "Low: $low_count" >> vulnerability-count.txt
            echo "Total: $total" >> vulnerability-count.txt
          else
            echo "No Snyk scan results found or scan failed." >> $GITHUB_STEP_SUMMARY
            echo "No vulnerabilities found or scan failed." > vulnerability-count.txt
          fi
          
      # Upload reports
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            snyk-results.json
            snyk-report.html
            vulnerability-count.txt
