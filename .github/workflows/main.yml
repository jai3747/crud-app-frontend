name: Semgrep Security Scan
on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays
jobs:
  semgrep-scan:
    name: Semgrep Code Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Semgrep Scan
        uses: semgrep/semgrep-action@v1
        with:
          config: p/default  # You can use other rulesets like p/owasp-top-ten, p/ci
          generateSarif: true  # Generate SARIF output for GitHub Security tab
        env:
          # Set your Semgrep token as a secret in GitHub repository
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
          # Continue even if vulnerabilities are found
          SEMGREP_TIMEOUT: 300
          # Set to true to continue pipeline even with findings
          SEMGREP_AUDIT_ON: true
          # This is crucial - don't fail the job on findings
          SEMGREP_BASELINE_REF: ""  # Optional: use this if you want to compare against a baseline
        continue-on-error: true  # This ensures the workflow doesn't fail when Semgrep finds issues
